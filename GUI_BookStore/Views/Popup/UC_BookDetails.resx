<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptbBok.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>